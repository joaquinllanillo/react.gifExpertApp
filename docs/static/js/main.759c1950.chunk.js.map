{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,cAAC,WAAD,UACI,sBAAMC,SAZQ,SAACC,GACnBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMd,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SArBW,SAACP,GAExBF,EAAeE,EAAEQ,OAAOF,e,+BCPnBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,G,MAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAGpB,sBAAKgB,UAAY,yCAAjB,UACI,qBAAKC,IAAOjB,EAAKkB,IAAOR,IACxB,4BAAIA,SCNHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAEtB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFX,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAACtB,IAEGuB,EDhB2BK,CAAa5B,GAAjCa,EAAd,EAAQN,KAAce,EAAtB,EAAsBA,QAEtB,OACI,eAAC,WAAD,WACI,oBAAIJ,UAAY,oCAAhB,SAAqDlB,IACpDsB,GAAW,aACX,qBAAKJ,UAAU,YAAf,SAEOL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,aAEIA,IAAKA,GACDA,GAFCA,EAAIC,aEZxBkB,EAAe,WAExB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAIA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCfnC+B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.759c1950.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handdleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue((e.target.value));\r\n    }\r\n\r\n    const handdleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log('Submit hecho');\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit = {handdleSubmit}>\r\n                <input \r\n                    type = \"text\" \r\n                    value = {inputValue} \r\n                    onChange ={handdleInputChange}>\r\n\r\n                </input>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=XyFQEf90wE2sE5eBs8t7Hrj17BnEFDdj&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport 'animate.css';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log({id, title, url});\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__bounce\">\r\n            <img src = {url} alt = {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3 className = 'animate__animated animate__bounce'>{category}</h3>\r\n            {loading && 'loading...'}\r\n            {<div className='card-grid'>\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            img={img}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>}\r\n        </Fragment>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                console.log(imgs);\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { Fragment, useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr />\r\n\r\n            {/* <button onClick = {handdleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category = {category}\r\n                        /> \r\n                    ))\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}